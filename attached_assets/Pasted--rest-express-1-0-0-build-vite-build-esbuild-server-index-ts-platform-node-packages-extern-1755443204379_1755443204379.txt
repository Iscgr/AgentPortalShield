> rest-express@1.0.0 build
> vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist

vite v5.4.19 building for production...
transforming (3) src/main.tsxBrowserslist: browsers data (caniuse-lite) is 10 months old. Please run:
  npx update-browserslist-db@latest
  Why you should do it regularly: https://github.com/browserslist/update-db#readme
✓ 1786 modules transformed.
../dist/public/index.html                                        0.79 kB │ gzip:   0.52 kB
../dist/public/assets/index-DM_mNg_7.css                       122.72 kB │ gzip:  19.25 kB
../dist/public/assets/modern-crm-dashboard-CCkGLL5Y.js           9.76 kB │ gzip:   3.63 kB
../dist/public/assets/enhanced-ai-helper-BsmiKF6g.js            12.91 kB │ gzip:   4.04 kB
../dist/public/assets/WorkspaceHub-DjsuMQhJ.js                  18.93 kB │ gzip:   4.97 kB
../dist/public/assets/new-representatives-manager-C5Llf1Au.js   29.55 kB │ gzip:   6.50 kB
../dist/public/assets/SettingsHub-COT3fq0v.js                   85.25 kB │ gzip:  16.86 kB
../dist/public/assets/index-B1a91Wsn.js                        726.21 kB │ gzip: 206.64 kB

(!) Some chunks are larger than 500 kB after minification. Consider:
- Using dynamic import() to code-split the application
- Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks
- Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.
✓ built in 4.44s
▲ [WARNING] Constructing "persianDate" will crash at run-time because it's an import namespace object, not a constructor [call-import-namespace]

    server/services/followup-manager.ts:174:25:
      174 │       const today = new (persianDate as any)().format('YYYY-MM-DD');
          ╵                          ~~~~~~~~~~~

  Consider changing "persianDate" to a default import instead:

    server/services/followup-manager.ts:16:7:
      16 │ import * as persianDate from "persian-date";
         │        ~~~~~~~~~~~~~~~~
         ╵        persianDate

  Make sure to enable TypeScript's "esModuleInterop" setting so that TypeScript's type checker
  generates an error when you try to do this. You can read more about this setting here:
  https://www.typescriptlang.org/tsconfig#esModuleInterop

▲ [WARNING] Constructing "persianDate" will crash at run-time because it's an import namespace object, not a constructor [call-import-namespace]

    server/services/workspace-storage.ts:68:23:
      68 │       const now = new (persianDate as any)().format('YYYY/MM/DD HH:mm:ss');
         ╵                        ~~~~~~~~~~~

  Consider changing "persianDate" to a default import instead:

    server/services/workspace-storage.ts:18:7:
      18 │ import * as persianDate from "persian-date";
         │        ~~~~~~~~~~~~~~~~
         ╵        persianDate

  Make sure to enable TypeScript's "esModuleInterop" setting so that TypeScript's type checker
  generates an error when you try to do this. You can read more about this setting here:
  https://www.typescriptlang.org/tsconfig#esModuleInterop

▲ [WARNING] Duplicate member "generateCulturalInsights" in class body [duplicate-class-member]

    server/services/xai-grok-engine.ts:727:8:
      727 │   async generateCulturalInsights(data: {
          ╵         ~~~~~~~~~~~~~~~~~~~~~~~~

  The original member "generateCulturalInsights" is here:

    server/services/xai-grok-engine.ts:312:8:
      312 │   async generateCulturalInsights(representative: any, prompt: string): Promise<strin...
          ╵         ~~~~~~~~~~~~~~~~~~~~~~~~

✘ [ERROR] Multiple exports with the same name "default"

    server/routes/unified-financial-routes.ts:1086:7:
      1086 │ export default router;
           ╵        ~~~~~~~

  The name "default" was originally exported here:

    server/routes/unified-financial-routes.ts:744:7:
      744 │ export default router;
          ╵        ~~~~~~~

▲ [WARNING] Duplicate member "analyzeFinancialData" in class body [duplicate-class-member]

    server/services/xai-grok-engine.ts:795:8:
      795 │   async analyzeFinancialData(
          ╵         ~~~~~~~~~~~~~~~~~~~~

  The original member "analyzeFinancialData" is here:

    server/services/xai-grok-engine.ts:433:8:
      433 │   async analyzeFinancialData(
          ╵         ~~~~~~~~~~~~~~~~~~~~

▲ [WARNING] Constructing "persianDate" will crash at run-time because it's an import namespace object, not a constructor [call-import-namespace]

    server/services/report-analyzer.ts:307:25:
      307 │     const tomorrow = new persianDate().add(1, 'day');
          ╵                          ~~~~~~~~~~~

  Consider changing "persianDate" to a default import instead:

    server/services/report-analyzer.ts:9:7:
      9 │ import * as persianDate from 'persian-date';
        │        ~~~~~~~~~~~~~~~~
        ╵        persianDate

  Make sure to enable TypeScript's "esModuleInterop" setting so that TypeScript's type checker
  generates an error when you try to do this. You can read more about this setting here:
  https://www.typescriptlang.org/tsconfig#esModuleInterop

5 of 6 warnings and 1 error shown (disable the message limit with --log-limit=0)