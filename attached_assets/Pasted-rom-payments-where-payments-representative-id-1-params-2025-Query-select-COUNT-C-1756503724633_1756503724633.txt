rom "payments" where "payments"."representative_id" = $1 -- params: [2025]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [2011]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [2046]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [2043]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [2018]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [2045]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [2041]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [2001]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1810]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [2016]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [2010]
âœ… SHERLOCK v32.0: Global summary calculated successfully
Query: select COUNT(*), SUM(CASE WHEN is_active = true THEN 1 ELSE 0 END) from "representatives"
âœ… SHERLOCK v32.0: Representatives data collected
Query: select COUNT(*), SUM(CASE WHEN status = 'paid' THEN 1 ELSE 0 END), SUM(CASE WHEN status = 'unpaid' THEN 1 ELSE 0 END), SUM(CASE WHEN status = 'overdue' THEN 1 ELSE 0 END) from "invoices"
âœ… SHERLOCK v32.0: Invoice statistics collected
ðŸ”´ CRITICAL GET /api/dashboard  200 in 1499ms
ðŸ§  High memory usage: 339MB after /api/dashboard 
9:40:22 PM [express] GET /api/dashboard 200 in 1538ms :: {"success":true,"data":{"summary":{"totalReâ€¦
Memory usage: { rss: 257.53, heapTotal: 116.93, heapUsed: 112.56, external: 9.75 }
